name: release

on:
  workflow_dispatch:
  pull_request:
    types: # when a pull request merges, the pull request is automatically closed
      - closed
    branches: #Â only run on pull requests that target specific branch
      - main

env:
  GO111MODULE: on
  CGO_ENABLED: 0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Source
        uses: actions/checkout@v4
      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      # Run build of the application
      - name: Run build
        run: make all COMMIT=$GITHUB_SHA BIN_DIR=dist
      # generate schema
      - name: Generate schema
        run: |
          cp dist/situation-*-linux /tmp/situation;
          /tmp/situation schema > dist/schema.json
      # upload binaries and schema
      - uses: actions/upload-artifact@v4
        with:
          name: situation
          path: dist/**

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: situation
          path: dist/
      - name: Create GitHub draft release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
          --draft
      - name: Upload artifact to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"
