name: test

on:
  pull_request:
env:
  test-module-binary: bin/situation-*module-testing-*
  artifact-basename: situation-module-testing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v4
      - name: Cache module testing binary
        id: cache-mtb
        uses: actions/cache@v3
        env:
          cache-name: cache-mtb
        with:
          path: ${{ env.test-module-binary }}
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/*.go') }}
      # build the binary
      - if: ${{ steps.cache-mtb.outputs.cache-hit != 'true' }}
        name: Build module testing binaries
        run: make build-test
      - name: Upload module testing binaries
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact-basename }}
          path: ${{ env.test-module-binary }}
          retention-days: 1

  test-linux:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          [
            "debian:10",
            "ubuntu:22.04",
            "fedora:36",
            "rockylinux:9.0",
            "alpine:3.17",
          ]
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Download module testing binary
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.artifact-basename }}
          path: bin
      - name: Export binary name
        run: |
          echo "situation=$(ls bin/situation-*linux | tail -n 1)" >> "$GITHUB_ENV"
          echo $GITHUB_ENV
      - name: Run the binary
        run: |
          chmod +x ${{ env.situation }}
          ${{ env.situation }}

  test-windows:
    strategy:
      matrix:
        os: [windows-2022, windows-2019, windows-10]
    needs: build
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download module testing binary
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.artifact-basename }}
          path: bin
      - name: Export binary name
        run: |
          $env:GITHUB_ENV += "`nsituation=$(ls bin/situation-*.exe | Select-Object -First 1)"
          echo $env:GITHUB_ENV
      - name: Run the binary
        run: |
          ${{ env.situation }}
