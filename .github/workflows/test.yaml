name: test

on:
  pull_request:
    # only go files and this file
    paths:
      - "**/*.go"
      - ".github/workflows/test.yaml"
      - "Makefile"

env:
  test-module-binary: bin/situation-*module-testing-*
  artifact-basename: situation-module-testing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Cache module testing binary
        id: cache-mtb
        uses: actions/cache@v4
        env:
          cache-name: cache-mtb
        with:
          path: ${{ env.test-module-binary }}
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/*.go') }}
      # build the binary
      - if: ${{ steps.cache-mtb.outputs.cache-hit != 'true' }}
        name: Build module testing binaries
        run: make build-test
      - name: Upload module testing binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact-basename }}
          path: ${{ env.test-module-binary }}
          retention-days: 1

  linux:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          [
            "debian:10",
            "debian:12",
            "ubuntu:22.04",
            "ubuntu:24.04",
            "fedora:40",
            "fedora:42",
            "rockylinux:8.9",
            "rockylinux:9.3",
            "alpine:3.18",
            "alpine:3.21",
            "opensuse/leap:15.6",
          ]
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Download module testing binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.artifact-basename }}
          path: bin
      - name: Run the binary
        run: |
          mv bin/situation-*linux bin/situation-module-testing
          chmod +x bin/situation-module-testing
          bin/situation-module-testing -test.v

  windows:
    needs: build
    strategy:
      matrix:
        os: [windows-2022, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download module testing binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.artifact-basename }}
          path: bin
      - name: Rename the built binary
        run: |
          Rename-Item -Path (Get-ChildItem -Path bin -Filter "situation-*.exe" | Select-Object -First 1).FullName -NewName "situation-module-testing.exe"

      - name: Run the binary
        run: |
          & ".\bin\situation-module-testing.exe" "-test.v" "-no-module-msi=true" "-skip-missing-deps=true"

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Update module docs
        run: make modules-doc

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Build docs
        run: uv run mkdocs build
