name: Test
on:
  pull_request:
env:
  test-module-binary: bin/situation-*module-testing-*linux

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19.3"
          cache: true
      - name: Cache module testing binary
        id: cache-mtb
        uses: actions/cache@v3
        env:
          cache-name: cache-mtb
        with:
          path: ${{ env.test-module-binary }}
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**.go') }}
      # build the binary
      - if: ${{ steps.cache-mtb.outputs.cache-hit != 'true' }}
        name: Build module testing binary
        run: make test-module

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["fedora:36", "ubuntu:22.04"]
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Cache module testing binary
        id: cache-mtb
        uses: actions/cache@v3
        env:
          cache-name: cache-mtb
        with:
          path: ${{ env.test-module-binary }}
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**.go') }}

      # run the test if cache hits
      - if: ${{ steps.cache-mtb.outputs.cache-hit == 'true' }}
        name: Test modules
        run: ${{ env.test-module-binary }}
